<?xml version="1.0" encoding="utf-8"?>
<!--
 - Copyright 2021-2024 SanteSuite Contributors (See NOTICE.md for full copyright notices)
 - Copyright (C) 2019 - 2021, Fyfe Software Inc. and the SanteSuite Contributors
 - Portions Copyright (C) 2015-2018 Mohawk College of Applied Arts and Technology
 - 
 - Licensed under the Apache License, Version 2.0 (the "License"); you 
 - may not use this file except in compliance with the License. You may 
 - obtain a copy of the License at 
 - 
 - http://www.apache.org/licenses/LICENSE-2.0 
 - 
 - Unless required by applicable law or agreed to in writing, software
 - distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
 - License for the specific language governing permissions and limitations under 
 - the License.
 -->
<BiDataFlowDefinition xmlns="http://santedb.org/bi" id="org.santedb.bi.datamart.core.entities">
  <parameters>
    <ref name="input" />
    <ref name="output" />
  </parameters>
  <pipeline>
    <log name="log_start" priority="Verbose">Start Entities {{input}}</log>
    <reader name="source_entities_db">
      <connection ref="input" />
      <sql>
        <add>
          <providers>
            <invariant>npgsql</invariant>
            <invariant>FirebirdSQL</invariant>
            <invariant>sqlite</invariant>
          </providers>
          <![CDATA[ 
            SELECT 
                ENT_VRSN_TBL.ENT_ID,
                ENT_VRSN_TBL.ENT_VRSN_ID AS VERSION,
                CLS_CD_ID AS CLASS,
                DTR_CD_ID AS DETERMINER,
                TYP_CD_ID AS TYPE,
                TPL_DEF_TBL.MNEMONIC AS TEMPLATE,
                GEO_TBL.LAT,
                GEO_TBL.LNG,
                ENT_VRSN_TBL.CRT_UTC AS CREATED_TIME,
                STS_CD_ID AS STATUS,
                COALESCE(CRT_PROV_TBL.USR_ID, CRT_PROV_TBL.DEV_ID)  AS CREATED_BY,
                ENT_VRSN_TBL.OBSLT_UTC AS OBSOLETE_TIME,
                COALESCE(OBS_PROV_TBL.USR_ID, OBS_PROV_TBL.DEV_ID)  AS OBSOLETE_BY
            FROM
                ENT_VRSN_TBL
                INNER JOIN SEC_PROV_TBL CRT_PROV_TBL ON (ENT_VRSN_TBL.CRT_PROV_ID = CRT_PROV_TBL.PROV_ID)
                LEFT JOIN SEC_PROV_TBL OBS_PROV_TBL ON (ENT_VRSN_TBL.OBSLT_PROV_ID = OBS_PROV_TBL.PROV_ID)
                LEFT JOIN GEO_TBL ON (GEO_TBL.GEO_ID = ENT_VRSN_TBL.GEO_ID)
                LEFT JOIN TPL_DEF_TBL ON (TPL_DEF_TBL.TPL_ID = ENT_VRSN_TBL.TPL_ID)
            WHERE
                ENT_VRSN_TBL.HEAD = TRUE
                        ]]>
        </add>
      </sql>
    </reader>
    <transform name="source_entities">
      <input ref="source_entities_db" />
      <map>
        <source name="ENT_ID" />
        <target name="ENT_ID" />
      </map>
      <map>
        <source name="VERSION" />
        <target name="VERSION" />
      </map>
      <map>
        <source name="CLASS">
          <concept />
        </source>
        <target name="CLASS" />
      </map>
      <map>
        <source name="DETERMINER">
          <concept />
        </source>
        <target name="DETERMINER" />
      </map>
      <map>
        <source name="TYPE">
          <concept/>
          </source>
        <target name="TYPE" />
      </map>
      <map>
        <source name="TEMPLATE" />
        <target name="TEMPLATE" />
      </map>
      <map>
        <source name="LAT" />
        <target name="LAT" />
      </map>
      <map>
        <source name="LNG" />
        <target name="LNG" />
      </map>
      <map>
        <source name="CREATED_TIME" />
        <target name="CREATED_TIME" />
      </map>
      <map>
        <source name="STATUS">
          <concept/>
          </source>
        <target name="STATUS" />
      </map>
      <map>
        <source name="CREATED_BY" />
        <target name="CREATED_BY" />
      </map>
      <map>
        <source name="OBSOLETE_TIME" />
        <target name="OBSOLETE_TIME" />
      </map>
      <map>
        <source name="OBSOLETE_BY" />
        <target name="OBSOLETE_BY" />
      </map>
    </transform>
    <writer truncate="true" mode="insert" name="write_entities">
      <input ref="source_entities" />
      <connection ref="output" />
      <target ref="ENT_TBL" />
    </writer>
    <filter name="filter_rejects">
      <input ref="write_entities" />
      <all>
        <when field="$reject" op="eq">
          <bool>true</bool>
        </when>
      </all>
    </filter>
    <halt name="halt_rejects">
      <input ref="filter_rejects" /> Halting execution - {{ ent_id }} rejected {{ $reject.reason }} </halt>
  </pipeline>
</BiDataFlowDefinition>