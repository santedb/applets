<?xml version="1.0" encoding="utf-8" ?>
<BiDataFlowDefinition xmlns="http://santedb.org/bi" id="org.santedb.bi.datamart.core.orgs">
  <parameters>
    <ref name="input" />
    <ref name="output" />
  </parameters>
  <pipeline>
    <log name="log_start" priority="Verbose">Start Orgs {{input}}</log>
    <reader name="input_orgs">
      <connection ref="input" />
      <sql>
        <add>
          <providers>
            <invariant>npgsql</invariant>
          </providers>
          <![CDATA[
            SELECT ENT_VRSN_TBL.ENT_ID, 
              NAME_ID AS NAME,
              ADDR_ID AS ADDR,
              ENT_TEL_TBL.TEL_VAL AS TEL,
              ENT_REL_TBL.TRG_ENT_ID AS PARENT,
              CD_VRSN_TBL.MNEMONIC AS INDUSTRY
            FROM
              ORG_TBL 
              INNER JOIN ENT_VRSN_TBL USING (ENT_VRSN_ID)
              INNER JOIN ENT_NAME_TBL ON (ENT_VRSN_TBL.ENT_ID = ENT_NAME_TBL.ENT_ID AND ENT_NAME_TBL.OBSLT_VRSN_SEQ_ID IS NULL AND ENT_NAME_TBL.USE_CD_ID = '1EC9583A-B019-4BAA-B856-B99CAF368656')
              INNER JOIN ENT_ADDR_TBL ON (ENT_VRSN_TBL.ENT_ID = ENT_ADDR_TBL.ENT_ID AND ENT_ADDR_TBL.OBSLT_VRSN_SEQ_ID IS NULL AND ENT_ADDR_TBL.USE_CD_ID IN ('5724A9B6-24B6-43B7-8075-7A0D61FCB814','D0DB6EDB-6CDC-4671-8BC2-00F1C808E188'))
              LEFT JOIN ENT_REL_TBL ON (ENT_VRSN_TBL.ENT_ID = ENT_REL_TBL.SRC_ENT_ID AND REL_TYP_CD_ID = 'BFCBB345-86DB-43BA-B47E-E7411276AC7C' AND ENT_REL_TBL.OBSLT_VRSN_SEQ_ID IS NULL)
              LEFT JOIN ENT_TEL_TBL ON (ENT_VRSN_TBL.ENT_ID = ENT_TEL_TBL.ENT_ID AND ENT_TEL_TBL.USE_CD_ID = 'EC35EA7C-55D2-4619-A56B-F7A986412F7F')
              LEFT JOIN CD_VRSN_TBL ON (CD_VRSN_TBL.CD_ID = ORG_TBL.IND_CD_ID AND CD_VRSN_TBL.HEAD)
            WHERE ENT_VRSN_TBL.HEAD
            ORDER BY ENT_VRSN_TBL.VRSN_SEQ_ID ASC
          ]]>
        </add>
        <add>
          <providers>
            <invariant>sqlite</invariant>
          </providers>
          <![CDATA[
              SELECT ENT_VRSN_TBL.ENT_ID, 
                  NAME_ID AS NAME,
                  ADDR_ID AS ADDR,
                  ENT_TEL_TBL.TEL_VAL AS TEL,
                  ENT_REL_TBL.TRG_ENT_ID AS PARENT,
                  CD_VRSN_TBL.MNEMONIC AS INDUSTRY
              FROM
                ORG_TBL 
                INNER JOIN ENT_VRSN_TBL USING (ENT_VRSN_ID)
                INNER JOIN ENT_NAME_TBL ON (ENT_VRSN_TBL.ENT_ID = ENT_NAME_TBL.ENT_ID AND ENT_NAME_TBL.OBSLT_VRSN_SEQ_ID IS NULL AND ENT_NAME_TBL.USE_CD_ID = X'3A58C91E19B0AA4BB856B99CAF368656')
                LEFT JOIN ENT_ADDR_TBL ON (ENT_VRSN_TBL.ENT_ID = ENT_ADDR_TBL.ENT_ID AND ENT_ADDR_TBL.OBSLT_VRSN_SEQ_ID IS NULL AND ENT_ADDR_TBL.USE_CD_ID IN (X'DB6EDBD0DC6C71468BC200F1C808E188',X'B6A92457B624B74380757A0D61FCB814'))
                LEFT JOIN ENT_REL_TBL ON (ENT_VRSN_TBL.ENT_ID = ENT_REL_TBL.SRC_ENT_ID AND REL_TYP_CD_ID = X'45B3CBBFDB86BA43B47EE7411276AC7C' AND ENT_REL_TBL.OBSLT_VRSN_SEQ_ID IS NULL)
                LEFT JOIN ENT_TEL_TBL ON (ENT_VRSN_TBL.ENT_ID = ENT_TEL_TBL.ENT_ID AND ENT_TEL_TBL.USE_CD_ID = X'7CEA35ECD2551946A56BF7A986412F7F')
                LEFT JOIN CD_VRSN_TBL ON (CD_VRSN_TBL.CD_ID = ORG_TBL.IND_CD_ID AND CD_VRSN_TBL.HEAD = 1)
              WHERE ENT_VRSN_TBL.HEAD = 1
              ORDER BY ENT_VRSN_TBL.VRSN_SEQ_ID ASC
        ]]>
        </add>
      </sql>
    </reader>
    <writer truncate="true" mode="insertUpdate" name="write_orgs">
      <input ref="input_orgs" />
      <connection ref="output" />
      <target ref="ORG_TBL" />
    </writer>
    <filter name="filter_rejects">
      <input ref="write_orgs" />
      <all>
        <when field="$reject" op="eq">
          <bool>true</bool>
        </when>
      </all>
    </filter>
    <transform name="transform_rejects">
      <input ref="filter_rejects" />
      <map>
        <source name="ENT_ID" />
        <target name="RECORD_ID" />
      </map>
      <map>
        <source>
          <fixed>ORG_TBL</fixed>
        </source>
        <target name="TYPE" />
      </map>
      <map>
        <source name="$reject.reason" />
        <target name="REASON" />
      </map>
    </transform>
    <writer mode="insertUpdate" truncate="false" name="write_rejects">
      <input ref="transform_rejects" />
      <connection ref="output" />
      <target ref="REJECT_TBL" />
    </writer>
    <filter name="filter_rejects2">
      <input ref="write_rejects" />
      <all>
        <when field="$reject" op="eq">
          <bool>true</bool>
        </when>
      </all>
    </filter>
    <halt name="halt_rejects">
      <input ref="filter_rejects2" />
    </halt>
  </pipeline>
</BiDataFlowDefinition>